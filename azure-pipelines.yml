# Docker
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

pr: ['develop']
trigger: ['develop']


variables:
  azureSubscription: 'yw-brm-dev'
  pool: 'ase-release-pool'
  workingDirectory: '$(System.DefaultWorkingDirectory)/'
  environmentName: 'ywBrmWebAppDev'
  environmentDev: YW-RM-react-app-dev-env
  environmentProd: YW-RM-react-app-deploy-env
  rgDev: yw-brm-dev
  rgProd: yw-brm-dev

stages:
  - stage: Build
    displayName: Build stage
    jobs:
      - job: Build
        displayName: Build
        pool:
          name: $(pool)

        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: '10.x'
            displayName: 'Install Node.js'

          - script: |
              yarn install
              yarn run build
            displayName: 'yarn install, build and test'

          - task: ArchiveFiles@2
            displayName: 'Archive files'
            inputs:
              rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
              includeRootFolder: false
              archiveType: zip
              archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
              replaceExistingArchive: true

          - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
            artifact: drop

  - stage: Deploy_Dev
    displayName: Deploy to dev
    dependsOn: Build
    condition: succeeded()
    jobs:
      - deployment: Deploy
        displayName: Deploy
        environment: $(environmentDev)
        pool:
          name: $(pool)
        strategy:
          runOnce:
            deploy:
              steps:
                - task: AzureWebApp@1
                  displayName: 'Azure Web App Deploy: {{ webAppName }}'
                  inputs:
                    azureSubscription: $(azureSubscription)
                    appName: $(webAppName)
                    deployToSlotOrASE: true
                    resourceGroupName: $(rgDev)
                    runtimeStack: 'NODE|10.10'
                    package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
                    startUpCommand: 'npm run start'
  - stage: Deploy_Prod
    displayName: Deploy to prod
    dependsOn: Deploy_Dev
    condition: succeeded()
    jobs:
      - deployment: Deploy
        displayName: Deploy
        environment: $(environmentProd)
        pool:
          name: $(pool)
        strategy:
          runOnce:
            deploy:
              steps:
                - task: AzureWebApp@1
                  displayName: 'Azure Web App Deploy: {{ webAppName }}'
                  inputs:
                    azureSubscription: $(azureSubscription)
                    appName: $(webAppName)
                    deployToSlotOrASE: true
                    resourceGroupName: $(rgDev)
                    runtimeStack: 'NODE|10.10'
                    package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
                    startUpCommand: 'npm run start'
