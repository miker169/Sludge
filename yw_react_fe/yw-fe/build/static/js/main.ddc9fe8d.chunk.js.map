{"version":3,"sources":["images/yw-logo-blue.png","components/Button/Button.js","components/nav/Nav.js","components/Header/header.js","context/FlowContext.js","context/useDataContext.js","components/FileUpload/fileInput.js","components/arrow/index.js","components/FlowContainer/index.js","components/Help/index.js","components/Main/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Button","active","title","classes","name","disabled","clickHandler","btnClass","classNames","onClick","data-testid","className","Nav","Header","src","logo","alt","UPLOADING_CSV_TEXT","fileName","CHOOSE_RUN_MODEL_TEXT","reducer","actions","defaultValue","Context","React","createContext","Provider","children","useReducer","state","dispatch","boundActions","key","value","useDataContext","type","payload","enabled","inputDisabled","helpText","enableFileUpload","csvFileName","inputArrowDisabled","inputUpdateArrowDisabled","inputArrowRan","runDisabled","updateDisabled","inputUpdateArrowRan","updateArrowDisabled","updateArrowRan","nextArrowDisabled","nextArrowRan","getResultsDisabled","start","inputData","uploadData","setTimeout","runData","updateData","FileInput","ref","useRef","useState","label","setLabel","useContext","FlowContext","HiddenInput","accept","onChange","e","currentTarget","files","indexOf","style","display","current","click","size","icon","faCaretDown","Arrow","path","ran","arrowClass","x","y","fill","id","markerWidth","markerHeight","refX","refY","orient","points","markerEnd","d","FlowContainer","strokeWidth","stroke","Help","faInfoCircle","Main","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ddc9fe8d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/yw-logo-blue.dc6e04a1.png\";","import React from 'react';\nimport classNames from 'classnames';\nimport './Buttton.css'\n\nconst Button = ({active, title, classes, name, disabled, clickHandler}) => {\n\n  let btnClass = classNames({\n    'active': !!active,\n    'disabled': disabled\n  }, classes)\n\n  return(\n    <a onClick={clickHandler} data-testid={`${name}-component-btn`} className={btnClass}>{title}</a>\n  )\n}\n\nexport default Button;\n","import React from \"react\";\nimport Button from \"../Button/Button\";\nimport \"./Nav.css\";\nimport { faInfoCircle } from  '@fortawesome/free-solid-svg-icons'\n\nconst Nav = () => {\n  return (\n    <ul data-testid=\"nav-container\" className=\"nav\">\n      <li><Button active title=\"Run Model WorkFlow\"/></li>\n      <li><Button title=\"Manage\"/></li>\n    </ul>\n  )\n}\n\nexport default Nav;\n","import React from 'react';\nimport './header.css';\nimport logo from \"../../images/yw-logo-blue.png\";\n\nconst Header = () => {\n  return (\n    <div data-testid=\"header-container\" className=\"header-container\">\n      <div className=\"header-container__inner\">\n        <div className=\"header-container--home\">\n          <img className=\"logo\" src={logo} alt=\"logo\"/>\n        </div>\n        <h1>Sludge Modelling Tool</h1>\n        <div className=\"welcome\" data-testid=\"welcome\">\n          <span>Welcome: </span><span>Oliver Horne</span>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Header;\n","import useDataContext from \"./useDataContext\";\n\n\nconst START_FLOW = \"START_FLOW\";\nconst INPUT_DATA = \"INPUT_DATA\"\nconst UPLOADING_DATA = \"UPLOADING_DATA\";\nconst RUN_DATA = \"RUN_DATA\";\nconst RAN_DATA_MODEL = \"RAN_DATA_MODEL\";\nconst START_UPDATE_DATA = \"START_UPDATE_DATA\"\nconst DATA_UPDATED = \"DATA_UPDATED\";\nconst STATIC_DATA_TEXT = (fileName) =>  `Click Input Static Data to upload ${fileName}`\nconst UPLOAD_CSV_TEXT = 'Click \\'Upload CSV\\', then select a CSV/Excel file you want to run, from the pop up window.'\nconst UPLOADING_CSV_TEXT = (fileName) => `Uploading ${fileName}`;\n// const UPDATE_RUN_CHOICE_TEXT = 'Select Run Model to run the model or Update Static Data to update the csv';\nconst CHOOSE_RUN_MODEL_TEXT = (fileName) =>  `Select Run Model to run the model for ${fileName}`;\nconst RUNNING_MODEL_TEXT = \"Running the Model...\";\nconst GET_RESULTS_TEXT = \"Model has ran click Get Results to get the results in a .csv format\";\n\n\nconst flowReducer = (state, { type, payload }) => {\n  switch (type) {\n    case START_FLOW:\n      return {\n        ...state,\n        enabled: true,\n        inputDisabled: false,\n        helpText: STATIC_DATA_TEXT(payload),\n        enableFileUpload: false,\n        csvFileName: payload\n      }\n    case UPLOADING_DATA:\n      return {\n        ...state,\n        inputArrowDisabled: false,\n        inputUpdateArrowDisabled: false,\n        inputDisabled: true,\n        helpText: UPLOADING_CSV_TEXT(state.csvFileName)\n      }\n    case INPUT_DATA:\n      return {\n        ...state,\n        inputArrowRan: true,\n        inputDisabled: true,\n        runDisabled: false,\n        updateDisabled: false,\n        inputUpdateArrowRan: true,\n        enableFileUpload: true,\n        helpText: CHOOSE_RUN_MODEL_TEXT(state.csvFileName)\n      }\n    case START_UPDATE_DATA:\n      return {\n        ...state,\n        updateArrowDisabled: false,\n        inputArrowDisabled: true,\n        updateDisabled: true,\n        enableFileUpload: false,\n        helpText: UPLOADING_CSV_TEXT(state.csvFileName)\n      }\n    case DATA_UPDATED:\n      return {\n        ...state,\n        updateArrowRan: true,\n        helpText: CHOOSE_RUN_MODEL_TEXT,\n        enableFileUpload: false,\n      }\n    case RUN_DATA:\n      return {\n        ...state,\n        nextArrowDisabled: false,\n        inputUpdateArrowDisabled: true,\n        updateDisabled: true,\n        helpText: RUNNING_MODEL_TEXT\n      }\n    case RAN_DATA_MODEL:{\n      return {...state, nextArrowRan: true, runDisabled: true, getResultsDisabled: false,\n      helpText: GET_RESULTS_TEXT}\n    }\n    default:\n      return state;\n  }\n}\n\n\nconst start = (dispatch) => (fileName) => dispatch({type: START_FLOW, payload: fileName});\nconst inputData = (dispatch) => () => dispatch({type: INPUT_DATA});\nconst uploadData = (dispatch) => () =>{\n  dispatch({type: UPLOADING_DATA});\n  setTimeout(() => {\n    dispatch({type: INPUT_DATA});\n  }, 3000)\n\n}\nconst runData = (dispatch) => () => {\n  dispatch({type: RUN_DATA});\n  setTimeout(() => {\n    dispatch({type: RAN_DATA_MODEL});\n  }, 3000)\n}\n\nconst updateData = (dispatch) => () => {\n  dispatch({type: START_UPDATE_DATA})\n  setTimeout(() => {\n    dispatch({type: DATA_UPDATED});\n  },3000);\n}\n\nexport const { Provider, Context } =\n  useDataContext(flowReducer, { start, inputData, uploadData, runData, updateData }, {\n    enabled: false,\n    helpText: UPLOAD_CSV_TEXT,\n    inputDisabled: true,\n    updateDisabled: true,\n    inputArrowDisabled: true,\n    inputArrowRan: false,\n    inputUpdateArrowDisabled: true,\n    inputUpdateArrowRan: false,\n    updateArrowDisabled: true,\n    updateArrowRan: false,\n    runDisabled: true,\n    nextArrowDisabled: true,\n    nextArrowRan: false,\n    getResultsDisabled: true,\n    enableFileUpload: true,\n  });\n\n","import React from 'react';\n\n\nexport default (reducer, actions, defaultValue) => {\n  const Context = React.createContext();\n\n  const Provider = ({children}) => {\n    const [state, dispatch ] = React.useReducer(reducer, defaultValue);\n\n    const boundActions  = {};\n    for (let key in actions) {\n      boundActions[key] = actions[key](dispatch);\n    }\n\n    return (\n      <Context.Provider value={{state, ...boundActions}}>\n        {children}\n      </Context.Provider>\n    )\n  };\n\n  return {  Context, Provider };\n}\n","import React from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faFolderOpen, faCaretDown } from  '@fortawesome/free-solid-svg-icons'\nimport './fileUpload.css'\nimport { Context as FlowContext } from \"../../context/FlowContext\";\n\nconst FileInput = () => {\n\n  const ref = React.useRef(null);\n  const [label , setLabel] = React.useState('Upload CSV');\n  const {start} = React.useContext(FlowContext);\n\n\n  const HiddenInput = () => (\n    <input accept=\".csv, text/csv, application/csv. xsl, .xslx\"\n           onChange={(e) => {\n             if(e.currentTarget.files[0].type.indexOf('csv') !== -1) {\n               setLabel(e.currentTarget.files[0].name);\n               start(e.currentTarget.files[0].name)\n             }\n          } }\n           data-testid=\"hidden-input\"\n           ref={ref}\n           type=\"file\"\n           name=\"resume\"\n           style={{display: 'none'}}\n    />\n  )\n  return (\n    <div data-testid=\"component-file-upload\" className=\"file\" onClick={() => ref.current.click()}>\n     <HiddenInput />\n\n      <label className=\"file-label\">\n         {/* <span className=\"file-icon\">*/}\n         {/*   <FontAwesomeIcon icon={faFolderOpen} />*/}\n         {/*</span>*/}\n          <span className=\"file-cta\">\n            <span data-testid=\"fileLabel\" className=\"file-label\">\n              {label}\n            </span>\n          </span>\n          <span className=\"down-icon\">\n            <FontAwesomeIcon size={\"2x\"} icon={faCaretDown} />\n         </span>\n      </label>\n    </div>\n  )\n}\n\nexport default FileInput;\n","import React from 'react';\nimport './arrow.css';\nimport classNames from \"classnames\";\n\nconst Arrow = ({path=\"M20 40 L 180 40\", children, disabled, name, ran} ) => {\n\n  let arrowClass = classNames({\n    'disabled': disabled,\n    'arrow': true,\n    'ran': ran\n  })\n\n  return (\n    <svg x=\"0px\" y=\"0px\" >\n      <defs>\n        <marker fill=\"#FFF\" id=\"arrowhead\" markerWidth=\"10\" markerHeight=\"7\"\n                refX=\"0\" refY=\"3.5\" orient=\"auto\">\n          <polygon points=\"0 0, 10 3.5, 0 7\" />\n        </marker>\n      </defs>\n      {children}\n      <path\n        data-testid={`${name}-component-arrow`}\n        name={name}\n        disabled={disabled}\n        className={arrowClass}\n        markerEnd=\"url(#arrowhead)\"\n        d={path}\n      />\n    </svg>\n  )\n}\n\n\nexport default Arrow;\n","import React from 'react';\nimport Button from \"../Button/Button\";\nimport Arrow from \"../arrow\";\nimport './flowContainer.css';\nimport { Context as FlowContext } from \"../../context/FlowContext\";\n\n\n\nconst FlowContainer = () => {\n  const {state, uploadData, runData, updateData} = React.useContext(FlowContext);\n  debugger;\n\n  const Flow = () => (\n    <div data-testid=\"component-flow\" className=\"flowContainer\">\n      <div className=\"inputFlow\">\n        <Button clickHandler={uploadData} disabled={state.inputDisabled} name=\"input\" classes={['flow']} title=\"Input Static Data\" />\n      </div>\n      <div className=\"updateFlow\">\n        <Arrow name=\"input\" disabled={state.inputArrowDisabled} ran={state.inputArrowRan}>\n          <path\n            className={state.updateArrowDisabled\n              ? \"arrow disabled\"\n              : state.updateArrowRan ? \"arrow pull down ran\": \"arrow pull-down\"}\n            data-testid=\"update-component-arrow\"\n            name=\"update\"\n            markerEnd=\"url(#arrowhead)\" d=\"M145 145 Q 105 42 180 39\"\n            strokeWidth=\"3\"\n            stroke=\"white\"\n            fill=\"transparent\"\n          />\n          {/*<path*/}\n          {/*  className={state.inputUpdateArrowDisabled*/}\n          {/*    ? \"arrow disabled\"*/}\n          {/*    : state.inputUpdateArrowRan ? \"arrow pull-down ran\": \"arrow pull-down\"}*/}\n          {/*  data-testid=\"inputupdate-component-arrow\"*/}\n          {/*  name=\"inputUpdate\"*/}\n          {/*  markerEnd=\"url(#arrowhead)\" d=\"M5 40 Q 109 33 75 120\"*/}\n          {/*  strokeWidth=\"3\"*/}\n          {/*  stroke=\"white\"*/}\n          {/*  fill=\"transparent\"*/}\n          {/*/>*/}\n        </Arrow>\n        {/*<Button clickHandler={updateData} disabled={state.updateDisabled} classes={['flow']} title=\"Update Static Data\" name=\"update\" />*/}\n      </div>\n      <div className=\"runFlow\">\n        <Button clickHandler={runData} disabled={state.runDisabled} name=\"run\" classes={['flow']} title=\"Run Model\" />\n      </div>\n      <div className=\"next\">\n        <Arrow name=\"run\" disabled={state.nextArrowDisabled} ran={state.nextArrowRan} />\n      </div>\n      <div className=\"resultsFlow\">\n        <Button name=\"results\" disabled={state.getResultsDisabled} classes={['flow']} title=\"Get Results\" />\n      </div>\n    </div>\n  )\n\n  return (\n    <>\n      {state.enabled ? Flow() : null}\n    </>\n  )\n}\n\n\nexport default FlowContainer;\n","import React from 'react';\nimport './help.css';\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faInfoCircle} from \"@fortawesome/free-solid-svg-icons\";\nimport { Context as FlowContext } from \"../../context/FlowContext\";\n\nconst Help = () => {\n const {state} = React.useContext(FlowContext);\n  return (\n    <span data-testid=\"component-help\" className=\"step1\"><FontAwesomeIcon className=\"help-icon\" icon={faInfoCircle} />{state.helpText}</span>\n  )\n}\n\nexport default Help;\n","import React from 'react';\nimport FileInput from \"../FileUpload/fileInput\";\nimport FlowContainer from \"../FlowContainer\";\nimport './main.css';\nimport { Context as FlowContext } from \"../../context/FlowContext\";\nimport Help from \"../Help\";\n\nconst Main = () => {\n  const {state} = React.useContext(FlowContext);\n\n  return (\n    <div data-testid=\"component-main\" className=\"mainContainer\">\n      <div className=\"csv-choose\">\n        {state.enabled ? null : <FileInput/> }\n        <Help />\n      </div>\n      <FlowContainer/>\n    </div>\n  )\n}\n\nexport default Main;\n","import React from 'react';\nimport './App.css';\n\nimport Nav from \"./components/nav/Nav\";\nimport Header from \"./components/Header/header\";\nimport Main from \"./components/Main\";\nimport { Provider as FlowProvider } from \"./context/FlowContext\";\n\nfunction App() {\n  return (\n    <>\n     <FlowProvider>\n       <Header />\n       <Nav/>\n       <Main/>\n     </FlowProvider>\n    </>\n);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}